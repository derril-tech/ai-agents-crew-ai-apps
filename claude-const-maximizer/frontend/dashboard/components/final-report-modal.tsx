'use client'

import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { 
  X, 
  CheckCircle, 
  Download, 
  Copy, 
  AlertCircle, 
  Zap 
} from 'lucide-react'

interface FinalReport {
  projectName: string
  completionDate: string
  status: string
  perfect_one_page_document?: string
  agent_final_answer?: string
  summary: {
    totalFiles: number
    developmentTime: string
    estimatedValue: string
    deploymentReady: boolean
    techStack: string[]
    features: string[]
    agentsUsed: string[]
    claudeOptimized?: boolean
    fourDocumentWeapon?: boolean
  }
  metrics: {
    codeQuality: number
    completeness: number
    deployability: number
    marketFit: number
  }
  deliverables: {
    market_research: {
      content: string
    }
    project_brief: string
    generated_code: {
      backend: any[]
      frontend: any[]
    }
    frontend_boilerplate?: {
      description: string
      content: string
    }
    backend_boilerplate?: {
      description: string
      content: string
    }
  }
}

interface FinalReportModalProps {
  isOpen: boolean
  onClose: () => void
  projectId: string
  projectName: string
}

export default function FinalReportModal({ 
  isOpen, 
  onClose, 
  projectId, 
  projectName 
}: FinalReportModalProps) {
  const [report, setReport] = useState<FinalReport | null>(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [copied, setCopied] = useState(false)
  const [activeTab, setActiveTab] = useState<'crew-results' | 'one-page-doc'>('one-page-doc')

  // Function to organize the 1-page document content
  const organizeOnePageDocument = (content: string) => {
    if (!content) return { promptContent: '', metadata: '' }
    
    // Split content into sections
    const sections = content.split('\n\n')
    const promptSections = []
    const metadataSections = []
    
    for (const section of sections) {
      const trimmedSection = section.trim()
      if (!trimmedSection) continue
      
      // Identify metadata sections (usually contain internal notes, instructions, etc.)
      const isMetadata = 
        trimmedSection.toLowerCase().includes('claude optimization') ||
        trimmedSection.toLowerCase().includes('4-document weapon') ||
        trimmedSection.toLowerCase().includes('crewai') ||
        trimmedSection.toLowerCase().includes('agent') ||
        trimmedSection.toLowerCase().includes('internal') ||
        trimmedSection.toLowerCase().includes('note:') ||
        trimmedSection.toLowerCase().includes('important:') ||
        trimmedSection.toLowerCase().includes('generated by') ||
        trimmedSection.toLowerCase().includes('execution plan') ||
        trimmedSection.toLowerCase().includes('quality assessment')
      
      if (isMetadata) {
        metadataSections.push(trimmedSection)
      } else {
        promptSections.push(trimmedSection)
      }
    }
    
    // Switch the contents - metadata becomes prompt content and vice versa
    return {
      promptContent: metadataSections.join('\n\n'),
      metadata: promptSections.join('\n\n')
    }
  }

  // Function to clean up content for better presentation
  const cleanContent = (content: string) => {
    if (!content) return ''
    
    return content
      // Remove ## markings
      .replace(/^##\s*/gm, '')
      // Tighten spacing between sentences (reduce multiple newlines to single)
      .replace(/\n{3,}/g, '\n\n')
      // Clean up any extra whitespace
      .trim()
  }

  useEffect(() => {
    if (isOpen && projectId) {
      loadFinalReport()
    }
  }, [isOpen, projectId])

  const loadFinalReport = async () => {
    setLoading(true)
    setError(null)
    
    try {
      console.log('Loading final report for project:', projectId)
      const response = await fetch(`http://localhost:8001/api/pipeline-complete/${projectId}`)
      
      if (!response.ok) {
        throw new Error(`Failed to load final report: ${response.status}`)
      }
      
      const data = await response.json()
      console.log('Report data received:', data)
      setReport(data)
    } catch (err) {
      console.error('Error loading report:', err)
      setError(err instanceof Error ? err.message : 'Unknown error')
    } finally {
      setLoading(false)
    }
  }

  const downloadReport = () => {
    if (!report) return
    
    let reportContent = ''
    
    if (activeTab === 'one-page-doc') {
      // Download the 1-page document (organized)
      const content = report.agent_final_answer || report.perfect_one_page_document || '1-page document not available'
      const organized = organizeOnePageDocument(content)
      reportContent = `🎯 PROMPT CONTENT (For AI Consumption)\n\n${cleanContent(organized.promptContent)}\n\n📋 DOCUMENT METADATA (Internal Notes)\n\n${cleanContent(organized.metadata)}`
    } else {
      // Download the crew results (existing logic)
      reportContent = report.perfect_one_page_document || [
      '┌─────────────────────────────────────────────────────────────────────────────────────┐',
      '│ PROJECT: ' + report.projectName,
      '│ TYPE: AI-Powered Application',
      '│',
      '│ 🎯 OBJECTIVE',
      '│ Create a comprehensive, production-ready ' + report.projectName.toLowerCase() + ' that leverages AI ',
      '│ to deliver exceptional user experiences and business value.',
      '│',
      '│ 👥 TARGET USERS',
      '│ Tech-savvy professionals and businesses seeking AI solutions.',
      '│',
      '│ 🛠️ TECHNICAL REQUIREMENTS',
      '│ Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS',
      '│ Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication',
      '│ Database: PostgreSQL + pgvector + Redis (caching)',
      '│ AI Integration: OpenAI API + Anthropic Claude API + LangChain',
      '│ Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)',
      '│',
      '│ 🎨 UX PATTERNS & DESIGN',
      '│ • Modern, responsive design with industry-specific color schemes',
      '│ • Intuitive navigation with clear user flows and micro-interactions',
      '│ • Accessibility-first approach with WCAG 2.1 AA compliance',
      '│ • Mobile-first responsive design with touch-friendly interfaces',
      '│ • Real-time updates and smooth animations for enhanced UX',
      '│',
      '│ 🔗 INTEGRATIONS & APIs',
      '│ • OpenAI GPT-4 for intelligent content generation and analysis',
      '│ • Anthropic Claude for advanced reasoning and complex tasks',
      '│ • JWT-based authentication with secure session management',
      '│ • Real-time WebSocket connections for live updates',
      '│ • File upload and processing with cloud storage integration',
      '│',
      '│ 📊 SUCCESS METRICS',
      '│ • User adoption and engagement rates',
      '│ • Feature utilization and performance metrics',
      '│ • System reliability and uptime monitoring',
      '│ • Business value generation and ROI measurement',
      '│',
      '│ 🚀 DEPLOYMENT & LAUNCH',
      '│ Vercel: Next.js frontend with automatic deployments',
      '│ Render: FastAPI backend with auto-scaling and monitoring',
      '│ PostgreSQL: Managed database with automated backups',
      '│ Environment: Comprehensive environment variable management',
      '│',
      '└─────────────────────────────────────────────────────────────────────────────────────┘',
      '',
      '## DETAILED MARKET RESEARCH',
      '',
      report.deliverables.market_research.content || 'Comprehensive market analysis completed by AI research team.',
      '',
      '## PROJECT BRIEF',
      '',
      report.deliverables.project_brief || 'Detailed project specifications and requirements.',
      '',
      '## CUSTOM BOILERPLATES',
      '',
      '### Frontend Boilerplate',
      report.deliverables.frontend_boilerplate?.content || 'Custom Next.js 14 + React + Tailwind CSS boilerplate with industry-specific components and design.',
      '',
      '### Backend Boilerplate',
      report.deliverables.backend_boilerplate?.content || 'Custom FastAPI + PostgreSQL boilerplate with authentication, API endpoints, and AI integration patterns.',
      '',
      '## GENERATED CODE STRUCTURE',
      '',
      'Backend Files (' + report.deliverables.generated_code.backend.length + '):',
      ...report.deliverables.generated_code.backend.slice(0, 5).map((file: any) => '  - ' + file.name),
      '',
      'Frontend Files (' + report.deliverables.generated_code.frontend.length + '):',
      ...report.deliverables.generated_code.frontend.slice(0, 5).map((file: any) => '  - ' + file.name),
      '',
      '## THE 4-DOCUMENT WEAPON STRATEGY',
      '',
      'This project implements the revolutionary 4-document weapon strategy:',
      '',
      '1. **Perfect 1-Page Document** (This Report) - Claude\'s dream brief',
      '2. **Custom Frontend Boilerplate** - Industry-specific React/Next.js components',
      '3. **Custom Backend Boilerplate** - Optimized FastAPI architecture',
      '4. **Optimized Prompt Template** - 3-5 prompts for complete application generation',
      '',
            'This strategy ensures complete, production-ready applications in exactly 3-5 prompts.',
      '',
      '## QUALITY ASSESSMENT',
      '',
      '- Code Quality: ' + report.metrics.codeQuality + '/100',
      '- Completeness: ' + report.metrics.completeness + '/100', 
      '- Deployability: ' + report.metrics.deployability + '/100',
      '- Market Fit: ' + report.metrics.marketFit + '/100',
      '',
      '## EXECUTION PLAN',
      '',
      'This document is optimized to execute in exactly 3-5 prompts:',
      '',
      '1. Backend Architecture: FastAPI setup, database models, API endpoints',
      '2. Frontend Implementation: Next.js components, routing, state management',
      '3. AI Integration: OpenAI API integration, prompt engineering',
      '4. Deployment Setup: Vercel + Render configuration, environment variables',
      '5. Final Polish: Testing, documentation, optimization (if needed)',
      '',
      '---',
      '*Generated by CrewAI Document Engineering Team - Optimized for AI Code Generation*'
    ].join('\n')
    }
    
    const blob = new Blob([reportContent], { type: 'text/plain' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = report.projectName.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '_report.txt'
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const copyReport = async () => {
    if (!report) return
    
    let reportContent = ''
    
    if (activeTab === 'one-page-doc') {
      // Copy the 1-page document (organized)
      const content = report.agent_final_answer || report.perfect_one_page_document || '1-page document not available'
      const organized = organizeOnePageDocument(content)
      reportContent = `🎯 PROMPT CONTENT (For AI Consumption)\n\n${cleanContent(organized.promptContent)}\n\n📋 DOCUMENT METADATA (Internal Notes)\n\n${cleanContent(organized.metadata)}`
    } else {
      // Copy the crew results (existing logic)
      reportContent = [
      '┌─────────────────────────────────────────────────────────────────────────────────────┐',
      '│ PROJECT: ' + report.projectName,
      '│ TYPE: ' + (report.projectName.toLowerCase().includes('chatbot') ? 'Chatbot' : 
                   report.projectName.toLowerCase().includes('rag') ? 'RAG' :
                   report.projectName.toLowerCase().includes('dashboard') ? 'Dashboard' :
                   report.projectName.toLowerCase().includes('generator') ? 'Generator' :
                   report.projectName.toLowerCase().includes('analysis') ? 'Analytics' : 'CRUD'),
      '│',
      '│ 🎯 OBJECTIVE',
      '│ ' + report.projectName + ' - A comprehensive AI-powered application designed to ' + 
      (report.projectName.toLowerCase().includes('code') ? 'automate code review and refactoring processes' :
       report.projectName.toLowerCase().includes('document') ? 'process and analyze documents intelligently' :
       report.projectName.toLowerCase().includes('financial') ? 'provide financial analysis and trading insights' :
       report.projectName.toLowerCase().includes('medical') ? 'assist with medical diagnosis and healthcare' :
       'deliver exceptional user value through AI integration') + '.',
      '│',
      '│ 👥 TARGET USERS',
      '│ ' + (report.projectName.toLowerCase().includes('code') ? 'Software developers, engineering teams, and code quality managers' :
             report.projectName.toLowerCase().includes('document') ? 'Business professionals, researchers, and knowledge workers' :
             report.projectName.toLowerCase().includes('financial') ? 'Traders, financial analysts, and investment professionals' :
             report.projectName.toLowerCase().includes('medical') ? 'Healthcare providers, medical professionals, and patients' :
             'Tech-savvy professionals and businesses seeking AI solutions') + ' seeking ' +
      (report.projectName.toLowerCase().includes('code') ? 'automated code quality improvement' :
       report.projectName.toLowerCase().includes('document') ? 'intelligent document processing' :
       report.projectName.toLowerCase().includes('financial') ? 'advanced financial analysis' :
       report.projectName.toLowerCase().includes('medical') ? 'accurate medical assistance' :
       'AI-powered productivity enhancement') + '.',
      '│',
      '│ 🛠️ TECHNICAL REQUIREMENTS',
      '│ Frontend: Next.js 14 + React + Tailwind CSS + TypeScript',
      '│ Backend: FastAPI + Python + SQLAlchemy + JWT Authentication',
      '│ Database: PostgreSQL + Redis (caching)',
      '│ AI: OpenAI/Claude API + LangChain + Vector Database',
      '│ Deployment: Vercel (frontend) + Render (backend)',
      '│',
      '│ 🎨 UX PATTERNS',
      '│ 1. User Authentication: Clerk/Auth.js integration with role-based access',
      '│ 2. Dashboard Interface: Responsive grid layout with real-time data updates',
      '│ 3. AI Integration: Chat interface with streaming responses and context memory',
      '│ 4. Data Management: CRUD operations with optimistic updates and error handling',
      '│ 5. Analytics: Interactive charts and metrics with export functionality',
      '│',
      '│ 🔗 INTEGRATIONS',
      '│ Authentication: Clerk or Auth.js with JWT tokens',
      '│ AI Services: OpenAI GPT-4/Claude API with function calling',
      '│ Database: PostgreSQL with Prisma ORM',
      '│ File Storage: AWS S3 or Cloudinary for document uploads',
      '│ Email: Resend or SendGrid for notifications',
      '│ Payment: Stripe for subscription management (if applicable)',
      '│',
      '│ 📊 SUCCESS METRICS',
      '│ 1. User Engagement: 80%+ session duration, 3+ pages per session',
      '│ 2. Performance: <2s API response time, 95%+ uptime',
      '│ 3. Business: 90%+ user satisfaction, 70%+ feature adoption rate',
      '│',
      '│ 🚀 DEPLOYMENT',
      '│ Vercel: Next.js app with environment variables and edge functions',
      '│ Render: FastAPI service with PostgreSQL database and Redis cache',
      '│ Environment: OPENAI_API_KEY, DATABASE_URL, JWT_SECRET, CLERK_SECRET_KEY',
      '│',
      '└─────────────────────────────────────────────────────────────────────────────────────┘',
      '',
      '## MARKET RESEARCH & ANALYSIS',
      '',
      report.deliverables.market_research.content || 'Comprehensive market analysis completed by AI research team.',
      '',
      '## PROJECT BRIEF',
      '',
      report.deliverables.project_brief || 'Detailed project specifications and requirements.',
      '',
      '## GENERATED CODE STRUCTURE',
      '',
      'Backend Files (' + report.deliverables.generated_code.backend.length + '):',
      ...report.deliverables.generated_code.backend.slice(0, 5).map((file: any) => '  - ' + file.name + ' (' + file.size + ' chars)'),
      '',
      'Frontend Files (' + report.deliverables.generated_code.frontend.length + '):',
      ...report.deliverables.generated_code.frontend.slice(0, 5).map((file: any) => '  - ' + file.name + ' (' + file.size + ' chars)'),
      '',
      '## QUALITY ASSESSMENT',
      '',
      '- Code Quality: ' + report.metrics.codeQuality + '/100',
      '- Completeness: ' + report.metrics.completeness + '/100', 
      '- Deployability: ' + report.metrics.deployability + '/100',
      '- Market Fit: ' + report.metrics.marketFit + '/100',
      '',
      '## CLAUDE EXECUTION PLAN',
      '',
      'This document is optimized for Claude to execute in exactly 3-5 prompts:',
      '',
      '1. Backend Architecture: FastAPI setup, database models, API endpoints',
      '2. Frontend Implementation: Next.js components, routing, state management',
      '3. AI Integration: OpenAI/Claude API integration, prompt engineering',
      '4. Deployment Setup: Vercel + Render configuration, environment variables',
      '5. Final Polish: Testing, documentation, optimization (if needed)',
      '',
      '---',
      '*Generated by CrewAI Document Engineering Team - Optimized for AI Code Generation*'
    ].join('\n')
    }
    
    try {
      await navigator.clipboard.writeText(reportContent)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    } catch (err) {
      console.error('Failed to copy report:', err)
    }
  }

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-7xl w-full max-h-[95vh] flex flex-col">
        <div className="p-6 flex-1 overflow-y-auto">
          {/* Header */}
          <div className="flex items-center justify-between mb-6">
            <div className="flex items-center gap-3">
              <div className="relative">
                <CheckCircle className="h-10 w-10 text-green-500" />
                <div className="absolute -top-1 -right-1 bg-green-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold">
                  ✓
                </div>
              </div>
              <div>
                <h2 className="text-3xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
                  Project Analysis Complete! 📋
                </h2>
                <p className="text-gray-600 text-lg">{projectName}</p>
                <p className="text-sm text-gray-500">CrewAI Results & 1-Page Document Ready</p>
              </div>
            </div>
            <Button variant="ghost" size="sm" onClick={onClose}>
              <X className="h-6 w-6" />
            </Button>
          </div>

          {loading && (
            <div className="text-center py-12">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto"></div>
              <p className="mt-4 text-gray-600 text-lg">Generating comprehensive report...</p>
            </div>
          )}

          {error && (
            <div className="text-center py-12">
              <AlertCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
              <p className="text-red-600 text-lg">Error: {error}</p>
            </div>
          )}

          {report && (
            <div className="space-y-8">
              {/* Tab Navigation */}
              <div className="flex gap-4 border-b border-gray-200">
                <button
                  onClick={() => setActiveTab('crew-results')}
                  className={`px-6 py-3 font-semibold text-lg transition-colors ${
                    activeTab === 'crew-results'
                      ? 'text-blue-600 border-b-2 border-blue-600'
                      : 'text-gray-500 hover:text-gray-700'
                  }`}
                >
                  📊 Crew Results
                </button>
                <button
                  onClick={() => setActiveTab('one-page-doc')}
                  className={`px-6 py-3 font-semibold text-lg transition-colors ${
                    activeTab === 'one-page-doc'
                      ? 'text-blue-600 border-b-2 border-blue-600'
                      : 'text-gray-500 hover:text-gray-700'
                  }`}
                >
                  🎯 1-Page Doc
                </button>
              </div>

              {/* Tab Content */}
              {activeTab === 'crew-results' && (
                <>
                  {/* Success Banner */}
                  <Card className="border-green-200 bg-green-50">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-4">
                          <div className="bg-green-100 p-3 rounded-full">
                            <Zap className="h-8 w-8 text-green-600" />
                          </div>
                          <div>
                            <h3 className="text-xl font-bold text-green-800">
                              🎉 AI Successfully Generated Complete Application!
                            </h3>
                            <p className="text-green-700">
                              Your {report.summary.developmentTime} development project is now ready to deploy
                            </p>
                          </div>
                        </div>
                        <div className="text-right">
                          <div className="text-2xl font-bold text-green-600">
                            {report.summary.estimatedValue}
                          </div>
                          <div className="text-sm text-green-700">Estimated Value</div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </>
              )}

              {activeTab === 'one-page-doc' && (
                <>
                  {/* Perfect 1-Page Document Banner */}
                  <Card className="border-blue-200 bg-blue-50">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-4">
                          <div className="bg-blue-100 p-3 rounded-full">
                            <Zap className="h-8 w-8 text-blue-600" />
                          </div>
                          <div>
                            <h3 className="text-xl font-bold text-blue-800">
                              🎯 Perfect 1-Page Document - The Ultimate Weapon!
                            </h3>
                            <p className="text-blue-700">
                              This document is optimized to produce complete applications in exactly 3-5 prompts
                            </p>
                            <div className="flex gap-2 mt-2">
                              {report.summary.claudeOptimized && (
                                <Badge variant="secondary" className="bg-green-100 text-green-800">
                                  AI Optimized ✓
                                </Badge>
                              )}
                              {report.summary.fourDocumentWeapon && (
                                <Badge variant="secondary" className="bg-purple-100 text-purple-800">
                                  4-Document Weapon ✓
                                </Badge>
                              )}
                            </div>
                          </div>
                        </div>
                        <div className="text-right">
                          <div className="text-2xl font-bold text-blue-600">
                            🎯
                          </div>
                          <div className="text-sm text-blue-700">Ready for AI</div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </>
              )}

              {/* Tab Content */}
              {activeTab === 'crew-results' && (
                <div className="space-y-8">
                  {/* Executive Summary */}
                  <div>
                    <h3 className="text-xl font-bold mb-4 text-gray-800">Executive Summary</h3>
                    <div className="bg-white p-6 rounded-lg border border-gray-200">
                      <p className="text-gray-700 leading-relaxed">
                        Our AI development team has successfully completed the development of "{report.projectName}". 
                        This comprehensive AI application was built using cutting-edge technologies and follows industry best practices.
                      </p>
                      <div className="mt-4 grid grid-cols-2 gap-4 text-sm">
                        <div><strong>Development Time:</strong> {report.summary.developmentTime}</div>
                        <div><strong>Estimated Value:</strong> {report.summary.estimatedValue}</div>
                        <div><strong>Total Files:</strong> {report.summary.totalFiles}</div>
                        <div><strong>Deployment Ready:</strong> {report.summary.deploymentReady ? 'Yes' : 'No'}</div>
                      </div>
                    </div>
                  </div>

                {/* Market Research Results */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Market Research & Analysis</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="text-gray-700 leading-relaxed whitespace-pre-wrap max-h-96 overflow-y-auto">
                      {report.deliverables.market_research.content || 'Our AI research team has completed comprehensive market analysis for this project. The research covers target market identification, competitive landscape analysis, and market opportunity assessment.'}
                    </div>
                  </div>
                </div>

                {/* Project Brief */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Project Brief</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="text-gray-700 leading-relaxed whitespace-pre-wrap">
                      {report.deliverables.project_brief || 'A comprehensive project brief has been generated outlining the project scope, requirements, and implementation strategy.'}
                    </div>
                  </div>
                </div>

                {/* Technology & Features */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Technology & Features</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-semibold mb-2 text-gray-800">Technology Stack</h4>
                        <ul className="text-gray-700 space-y-1">
                          {report.summary.techStack.map((tech, index) => (
                            <li key={index}>• {tech}</li>
                          ))}
                        </ul>
                      </div>
                      <div>
                        <h4 className="font-semibold mb-2 text-gray-800">Key Features</h4>
                        <ul className="text-gray-700 space-y-1">
                          {report.summary.features.map((feature, index) => (
                            <li key={index}>• {feature}</li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Quality Assessment */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Quality Assessment</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                      <div className="text-center">
                        <div className="text-2xl font-bold text-green-600">{report.metrics.codeQuality}%</div>
                        <div className="text-sm text-gray-600">Code Quality</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-blue-600">{report.metrics.completeness}%</div>
                        <div className="text-sm text-gray-600">Completeness</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-purple-600">{report.metrics.deployability}%</div>
                        <div className="text-sm text-gray-600">Deployability</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-orange-600">{report.metrics.marketFit}%</div>
                        <div className="text-sm text-gray-600">Market Fit</div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Custom Boilerplates */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Custom Boilerplates</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-semibold mb-3 text-gray-800 flex items-center gap-2">
                          <div className="w-3 h-3 bg-purple-500 rounded-full"></div>
                          Frontend Boilerplate
                        </h4>
                        <div className="space-y-3">
                          {report.deliverables.frontend_boilerplate ? (
                            <>
                              <div className="p-3 bg-purple-50 rounded border border-purple-200">
                                <div className="font-semibold text-purple-800">Custom Frontend Boilerplate</div>
                                <div className="text-sm text-purple-700 mt-1">{report.deliverables.frontend_boilerplate.description}</div>
                              </div>
                              <div className="text-sm text-gray-600">
                                <div><strong>Content:</strong> {report.deliverables.frontend_boilerplate.content}</div>
                                <div><strong>Type:</strong> Custom Next.js with industry-specific design</div>
                                <div><strong>Optimized for:</strong> {report.projectName}</div>
                              </div>
                            </>
                          ) : (
                            <div className="p-3 bg-gray-50 rounded border border-gray-200">
                              <div className="text-gray-600">Custom Next.js 14 + React + Tailwind CSS boilerplate with industry-specific components and design</div>
                            </div>
                          )}
                        </div>
                      </div>
                      <div>
                        <h4 className="font-semibold mb-3 text-gray-800 flex items-center gap-2">
                          <div className="w-3 h-3 bg-orange-500 rounded-full"></div>
                          Backend Boilerplate
                        </h4>
                        <div className="space-y-3">
                          {report.deliverables.backend_boilerplate ? (
                            <>
                              <div className="p-3 bg-orange-50 rounded border border-orange-200">
                                <div className="font-semibold text-orange-800">Custom Backend Boilerplate</div>
                                <div className="text-sm text-orange-700 mt-1">{report.deliverables.backend_boilerplate.description}</div>
                              </div>
                              <div className="text-sm text-gray-600">
                                <div><strong>Content:</strong> {report.deliverables.backend_boilerplate.content}</div>
                                <div><strong>Type:</strong> Custom FastAPI with optimized architecture</div>
                                <div><strong>Optimized for:</strong> {report.projectName}</div>
                              </div>
                            </>
                          ) : (
                            <div className="p-3 bg-gray-50 rounded border border-gray-200">
                              <div className="text-gray-600">Custom FastAPI + PostgreSQL boilerplate with authentication, API endpoints, and AI integration patterns</div>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Generated Code Files */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Generated Code Files</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-semibold mb-3 text-gray-800">Backend Files ({report.deliverables.generated_code.backend.length})</h4>
                        <div className="space-y-2">
                          {report.deliverables.generated_code.backend.slice(0, 5).map((file: any, index: number) => (
                            <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded">
                              <div className="flex items-center gap-2">
                                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                                <span className="text-sm font-mono">{file.name}</span>
                              </div>
                              <span className="text-xs text-gray-500">{file.size} chars</span>
                            </div>
                          ))}
                          {report.deliverables.generated_code.backend.length > 5 && (
                            <div className="text-sm text-gray-500 text-center">
                              +{report.deliverables.generated_code.backend.length - 5} more files
                            </div>
                          )}
                        </div>
                      </div>
                      <div>
                        <h4 className="font-semibold mb-3 text-gray-800">Frontend Files ({report.deliverables.generated_code.frontend.length})</h4>
                        <div className="space-y-2">
                          {report.deliverables.generated_code.frontend.slice(0, 5).map((file: any, index: number) => (
                            <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded">
                              <div className="flex items-center gap-2">
                                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                                <span className="text-sm font-mono">{file.name}</span>
                              </div>
                              <span className="text-xs text-gray-500">{file.size} chars</span>
                            </div>
                          ))}
                          {report.deliverables.generated_code.frontend.length > 5 && (
                            <div className="text-sm text-gray-500 text-center">
                              +{report.deliverables.generated_code.frontend.length - 5} more files
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Next Steps */}
                <div>
                  <h3 className="text-xl font-bold mb-4 text-gray-800">Next Steps</h3>
                  <div className="bg-white p-6 rounded-lg border border-gray-200">
                    <ol className="text-gray-700 space-y-2 list-decimal list-inside">
                      <li>Review the generated application and documentation</li>
                      <li>Set up the development environment with the provided technology stack</li>
                      <li>Deploy the application to your preferred platform</li>
                      <li>Begin user testing and collect feedback for improvements</li>
                      <li>Consider additional features based on market feedback</li>
                    </ol>
                  </div>
                </div>
              </div>
              )}

              {activeTab === 'one-page-doc' && (
                <div className="space-y-8">
                  {/* 1-Page Document Content */}
                  <div>
                    <h3 className="text-xl font-bold mb-4 text-gray-800">Perfect 1-Page Document</h3>
                    <div className="space-y-6">
                      {/* Main Prompt Content */}
                      <div className="bg-white p-6 rounded-lg border border-gray-200">
                        <h4 className="text-lg font-semibold mb-4 text-green-700">🎯 ULTIMATE AI WEAPON (For Maximum AI Performance)</h4>
                        <div className="bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-lg border border-green-200">
                          <div className="prose prose-lg max-w-none">
                            <div className="font-sans text-gray-800 leading-relaxed whitespace-pre-wrap">
                              {(() => {
                                const content = report.agent_final_answer || report.perfect_one_page_document || '1-page document not available'
                                const organized = organizeOnePageDocument(content)
                                return cleanContent(organized.promptContent) || 'Prompt content not available'
                              })()}
                            </div>
                          </div>
                        </div>
                      </div>

                      {/* Metadata Section */}
                      <div className="bg-white p-6 rounded-lg border border-gray-200">
                        <h4 className="text-lg font-semibold mb-4 text-blue-700">📋 STRATEGIC NOTES (Psychological Warfare Elements)</h4>
                        <div className="bg-gradient-to-br from-blue-50 to-indigo-50 p-4 rounded-lg border border-blue-200">
                          <div className="prose prose-sm max-w-none">
                            <div className="font-sans text-gray-700 leading-relaxed whitespace-pre-wrap text-sm">
                              {(() => {
                                const content = report.agent_final_answer || report.perfect_one_page_document || '1-page document not available'
                                const organized = organizeOnePageDocument(content)
                                return cleanContent(organized.metadata) || 'No metadata available'
                              })()}
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              )}

              {/* Action Buttons */}
              <div className="flex gap-4 justify-end pt-6 border-t">
                <Button variant="outline" onClick={onClose}>
                  Close
                </Button>
                <Button 
                  className="flex items-center gap-2" 
                  variant="outline"
                  onClick={copyReport}
                >
                  {copied ? <CheckCircle className="h-4 w-4" /> : <Copy className="h-4 w-4" />}
                  {copied ? 'Copied!' : 'Copy Report'}
                </Button>
                <Button className="flex items-center gap-2" onClick={downloadReport}>
                  <Download className="h-4 w-4" />
                  Download Report (TXT)
                </Button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}
