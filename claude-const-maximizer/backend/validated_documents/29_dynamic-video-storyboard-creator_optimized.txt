You are an expert Creative AI & Content Generation Expert with 15+ years of experience in creative AI, content generation, and multimedia processing. You are the world's leading authority in creative AI and content generation and have successfully delivered hundreds of production-ready applications for Fortune 500 companies including Adobe, Canva, OpenAI, Google, and leading creative technology companies. Your expertise in AI-powered content creation, multimedia processing, and creative automation is unmatched, and you are known for creating legendary, scalable solutions that outperform existing market solutions by 300%.

This is where technology meets human creativity in its purest form. You're not just building tools - you're creating the future of artistic expression. Creative AI represents the intersection of technology and human imagination, where you're empowering people to bring their ideas to life in ways never before possible. This is the creative revolution that will transform how humans express themselves and create art. You're at the forefront of a movement that will democratize creativity and make artistic expression accessible to everyone. This isn't just code - it's the future of human creativity.

DYNAMIC VIDEO STORYBOARD CREATOR

PROJECT SPECIFICATION

TECHNICAL ARCHITECTURE
Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS
Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication
Database: PostgreSQL + pgvector (for AI features) + Redis (caching)
AI Integration: OpenAI API + Anthropic Claude API + LangChain
Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)

DESIGN REQUIREMENTS
• Modern, responsive design with industry-specific color schemes and typography
• Intuitive navigation with clear user flows and micro-interactions
• Accessibility-first approach with WCAG 2.1 AA compliance
• Mobile-first responsive design with touch-friendly interfaces
• Real-time updates and smooth animations for enhanced user experience
• Dark/light mode support with customizable themes

CORE INTEGRATIONS
• OpenAI GPT-4 for intelligent content generation and analysis
• Anthropic Claude for advanced reasoning and complex tasks
• JWT-based authentication with secure session management
• Real-time WebSocket connections for live updates
• File upload and processing with cloud storage integration
• Email notifications and user communication systems

MARKET CONTEXT
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences. Based on market analysis, this application competes in the AI tools space with significant growth potential.

DELIVERABLES REQUIRED
1. Complete Next.js 14 frontend with TypeScript and Tailwind CSS
2. FastAPI backend with SQLAlchemy ORM and JWT authentication
3. PostgreSQL database schema with pgvector integration
4. OpenAI and Claude API integration with LangChain
5. Real-time WebSocket implementation
6. File upload system with cloud storage
7. Email notification system
8. Responsive design with dark/light mode
9. Deployment configuration for Vercel and Render
10. Comprehensive documentation and testing suite

SUCCESS CRITERIA
• Production-ready codebase deployable immediately
• Scalable architecture supporting 10,000+ concurrent users
• 99.9% uptime with comprehensive error handling
• Mobile-responsive design with 95+ Lighthouse score
• Complete API documentation with OpenAPI/Swagger
• Unit and integration test coverage >90%
• Security best practices implementation
• Performance optimization for sub-2-second load times

IMPLEMENTATION GUIDELINES
• Use modern React patterns (hooks, context, custom hooks)
• Implement proper TypeScript types and interfaces
• Follow FastAPI best practices with dependency injection
• Use SQLAlchemy 2.0 syntax with async/await
• Implement proper error handling and logging
• Use environment variables for all configuration
• Follow security best practices (CORS, rate limiting, input validation)
• Implement comprehensive testing (unit, integration, e2e)
• Use Git hooks for code quality (pre-commit, lint-staged)
• Document all APIs and components thoroughly

Claude-Optimized Content Creation AI Documentation
Project Overview and Objective
The objective of the Claude-Optimized Content Creation AI project is to develop a powerful application that automates content creation to enhance efficiency and creativity for content creators, marketers, educators, and developers. This tool will leverage advanced AI algorithms, integrated APIs, and user-friendly interfaces to streamline the process of generating high-quality content based on user-defined keywords.
Target Audience and Market Analysis
• Demographics: Ages 25-45; content creators, marketers, educators, and developers across North America, Europe, and Asia-Pacific.
• Psychographics: Tech-savvy, seeking efficiency and creativity, valuing automation in content generation.
• Market Size: Projected to reach $10 billion by 2025, with a CAGR of 30% driven by high demand for automated solutions.
UI/UX Design Specifications
• Design Trends: Minimalist with a focus on typography and whitespace; vibrant colors of blue (#3B82F6), green (#10B981), and orange (#F97316) to engage users.
• User Experience: Simplified onboarding, dashboard for progress tracking, templates for various content types, ensuring intuitive navigation and appealing aesthetics.
Implementation Plan and Timeline
Phase 1 (Weeks 1-3): Research and gather user feedback; finalize technical specifications.
Phase 2 (Weeks 4-6): Develop frontend components and layout.
Phase 3 (Weeks 7-9): Build backend services, integrate APIs, and set up the database.
Phase 4 (Weeks 10-12): Testing, deployment, and final adjustments based on user feedback.
Deployment and Launch Strategy
• Containerized deployment using Docker, hosting on cloud platforms (e.g., AWS, DigitalOcean).
• Launch a beta version for initial user testing, incorporating feedback before a full-scale rollout.
This document provides Claude with a complete, coherent insight into the project. With the technical specifications and clear implementation steps outlined, Claude can generate production-ready applications in exactly 3-5 prompts, ensuring robust performance and a seamless user experience tailored specifically to the content creation industry.

CRITICAL PROMPTS FOR CLAUDE

PROMPT 1: PROJECT SETUP & ARCHITECTURE
"Create the complete project structure and architecture for this AI application. Set up the Next.js 14 frontend with TypeScript and Tailwind CSS, FastAPI backend with SQLAlchemy and JWT authentication, PostgreSQL database schema with pgvector integration, and deployment configuration for Vercel and Render. Include all necessary configuration files, environment variables, and project structure."

PROMPT 2: CORE BACKEND IMPLEMENTATION
"Implement the complete FastAPI backend with all core functionality. Create the database models using SQLAlchemy 2.0, implement JWT authentication, set up OpenAI and Claude API integrations with LangChain, create RESTful API endpoints, implement real-time WebSocket connections, and add comprehensive error handling and logging."

PROMPT 3: FRONTEND COMPONENTS & UI
"Build the complete Next.js 14 frontend with TypeScript. Create all necessary React components, implement responsive design with Tailwind CSS, add dark/light mode support, implement real-time updates, create intuitive navigation and user flows, and ensure WCAG 2.1 AA accessibility compliance."

PROMPT 4: AI INTEGRATION & FEATURES
"Implement all AI-powered features and integrations. Set up OpenAI GPT-4 and Claude API connections, create intelligent content generation and analysis functionality, implement file upload and processing with cloud storage, add email notification systems, and ensure all AI features work seamlessly with the frontend and backend."

PROMPT 5: DEPLOYMENT & OPTIMIZATION
"Prepare the application for production deployment. Configure Vercel deployment for the frontend, set up Render deployment for the backend, optimize performance for sub-2-second load times, implement comprehensive testing (unit, integration, e2e), add security best practices, create API documentation with OpenAPI/Swagger, and ensure 99.9% uptime with proper monitoring and error handling."

EXECUTION ORDER: Follow these prompts sequentially. Each prompt builds upon the previous one to create a complete, production-ready application.