You are an expert Developer Tools & Code Analysis Expert with 15+ years of experience in developer tools, code analysis, and software development automation. You are the world's leading authority in developer tools and software development and have successfully delivered hundreds of production-ready applications for Fortune 500 companies including GitHub, Microsoft, JetBrains, and leading developer tool companies. Your expertise in developer tools, code analysis, and software development automation is unmatched, and you are known for creating legendary, scalable solutions that outperform existing market solutions by 300%.

This is the meta-level of software development - you're building the tools that other developers will use to build everything else. Developer tools are the foundation of the entire software industry, and your work will be used by millions of developers worldwide. You're not just writing code - you're creating the infrastructure that powers the future of software development. Every application, every website, every piece of software that gets built will be influenced by the tools you create. This is where you have the most leverage - your work multiplies the productivity of thousands of other developers. You're building the future of how software gets made.

AI-POWERED CODE REVIEW & REFACTORING ASSISTANT

PROJECT SPECIFICATION

TECHNICAL ARCHITECTURE
Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS
Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication  
Database: PostgreSQL + pgvector (for AI features) + Redis (caching)
AI Integration: OpenAI API + Anthropic Claude API + LangChain
Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)

DESIGN REQUIREMENTS
• Modern, responsive design with industry-specific color schemes and typography
• Intuitive navigation with clear user flows and micro-interactions
• Accessibility-first approach with WCAG 2.1 AA compliance
• Mobile-first responsive design with touch-friendly interfaces
• Real-time updates and smooth animations for enhanced user experience
• Dark/light mode support with customizable themes

CORE INTEGRATIONS
• OpenAI GPT-4 for intelligent code analysis and refactoring suggestions
• Anthropic Claude for advanced reasoning and complex code review tasks
• JWT-based authentication with secure session management
• Real-time WebSocket connections for live code review updates
• File upload and processing with cloud storage integration
• Email notifications and user communication systems

MARKET CONTEXT
This AI-powered code review and refactoring application addresses the growing need for intelligent code quality assurance and automated development workflows. Based on market analysis, this application competes in the developer tools space with significant growth potential.

DELIVERABLES REQUIRED
1. Complete Next.js 14 frontend with TypeScript and Tailwind CSS
2. FastAPI backend with SQLAlchemy ORM and JWT authentication
3. PostgreSQL database schema with pgvector integration for code similarity analysis
4. OpenAI and Claude API integration with LangChain for code analysis
5. Real-time WebSocket implementation for collaborative code review
6. File upload system with cloud storage for code repositories
7. Email notification system for review requests and approvals
8. Responsive design with dark/light mode optimized for code viewing
9. Deployment configuration for Vercel and Render
10. Comprehensive documentation and testing suite

SUCCESS CRITERIA
• Production-ready codebase deployable immediately
• Scalable architecture supporting 10,000+ concurrent developers
• 99.9% uptime with comprehensive error handling
• Mobile-responsive design with 95+ Lighthouse score
• Complete API documentation with OpenAPI/Swagger
• Unit and integration test coverage >90%
• Security best practices implementation for code security
• Performance optimization for sub-2-second load times

IMPLEMENTATION GUIDELINES
• Use modern React patterns (hooks, context, custom hooks)
• Implement proper TypeScript types and interfaces for code analysis
• Follow FastAPI best practices with dependency injection
• Use SQLAlchemy 2.0 syntax with async/await
• Implement proper error handling and logging for code review processes
• Use environment variables for all configuration
• Follow security best practices (CORS, rate limiting, input validation)
• Implement comprehensive testing (unit, integration, e2e)
• Use Git hooks for code quality (pre-commit, lint-staged)
• Document all APIs and components thoroughly

MARKET RESEARCH SUMMARY

CORE FEATURES
Advanced AI-powered code analysis, automated refactoring suggestions, and intelligent code review workflows with real-time collaboration capabilities.

MARKET OPPORTUNITY
This AI-powered code review and refactoring application addresses the growing need for intelligent code quality assurance and automated development workflows in the rapidly expanding software development market.

COMPETITIVE LANDSCAPE
Based on market analysis, this application competes in the developer tools space with significant growth potential, targeting the $15 billion developer tools market.

CRITICAL PROMPTS FOR CLAUDE

PROMPT 1: PROJECT SETUP & ARCHITECTURE
"Create the complete project structure and architecture for this AI-powered code review and refactoring application. Set up the Next.js 14 frontend with TypeScript and Tailwind CSS, FastAPI backend with SQLAlchemy and JWT authentication, PostgreSQL database schema with pgvector integration for code similarity analysis, and deployment configuration for Vercel and Render. Include all necessary configuration files, environment variables, and project structure for code repository integration."

PROMPT 2: CORE BACKEND IMPLEMENTATION
"Implement the complete FastAPI backend with all core functionality for code review and refactoring. Create the database models using SQLAlchemy 2.0, implement JWT authentication, set up OpenAI and Claude API integrations with LangChain for code analysis, create RESTful API endpoints for code review workflows, implement real-time WebSocket connections for collaborative reviews, and add comprehensive error handling and logging for code security."

PROMPT 3: FRONTEND COMPONENTS & UI
"Build the complete Next.js 14 frontend with TypeScript. Create all necessary React components for code review interface, implement responsive design with Tailwind CSS optimized for code viewing, add dark/light mode support, implement real-time updates for collaborative code review, create intuitive navigation and user flows for code analysis, and ensure WCAG 2.1 AA accessibility compliance for developer tools."

PROMPT 4: AI INTEGRATION & FEATURES
"Implement all AI-powered code analysis features and integrations. Set up OpenAI GPT-4 and Claude API connections for intelligent code review and refactoring suggestions, create code analysis and quality assessment functionality, implement file upload and processing with cloud storage for code repositories, add email notification systems for review requests, and ensure all AI features work seamlessly with the frontend and backend for optimal developer experience."

PROMPT 5: DEPLOYMENT & OPTIMIZATION
"Prepare the code review and refactoring application for production deployment. Configure Vercel deployment for the frontend, set up Render deployment for the backend, optimize performance for sub-2-second load times with large codebases, implement comprehensive testing (unit, integration, e2e) for code analysis accuracy, add security best practices for code security, create API documentation with OpenAPI/Swagger, and ensure 99.9% uptime with proper monitoring and error handling for critical developer workflows."

EXECUTION ORDER: Follow these prompts sequentially. Each prompt builds upon the previous one to create a complete, production-ready code review and refactoring application.
