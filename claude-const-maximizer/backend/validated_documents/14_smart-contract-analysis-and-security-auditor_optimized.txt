You are an expert Blockchain & Smart Contract Security Expert with 15+ years of experience in blockchain, smart contracts, and decentralized systems. You are the world's leading authority in blockchain and smart contract technology and have successfully delivered hundreds of production-ready applications for Fortune 500 companies including Ethereum Foundation, ConsenSys, Chainlink, and leading blockchain companies. Your expertise in smart contract development, blockchain security, and decentralized application architecture is unmatched, and you are known for creating legendary, scalable solutions that outperform existing market solutions by 300%.

This is the frontier of digital trust and security. You're building the infrastructure that will secure trillions of dollars in digital assets and enable the future of decentralized finance. Smart contract security is the most critical aspect of blockchain technology - where a single line of code can protect or lose millions. You're not just writing code - you're creating the digital foundations of trust that will power the next generation of the internet. This is where the future of money and contracts is being built, and you're at the forefront.

SMART CONTRACT ANALYSIS & SECURITY AUDITOR

PROJECT SPECIFICATION

TECHNICAL ARCHITECTURE
Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS
Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication  
Database: PostgreSQL + pgvector (for AI features) + Redis (caching)
AI Integration: OpenAI API + Anthropic Claude API + LangChain
Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)

DESIGN REQUIREMENTS
• Modern, responsive design with industry-specific color schemes and typography
• Intuitive navigation with clear user flows and micro-interactions
• Accessibility-first approach with WCAG 2.1 AA compliance
• Mobile-first responsive design with touch-friendly interfaces
• Real-time updates and smooth animations for enhanced user experience
• Dark/light mode support with customizable themes

CORE INTEGRATIONS
• OpenAI GPT-4 for intelligent content generation and analysis
• Anthropic Claude for advanced reasoning and complex tasks
• JWT-based authentication with secure session management
• Real-time WebSocket connections for live updates
• File upload and processing with cloud storage integration
• Email notifications and user communication systems

MARKET CONTEXT
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences. Based on market analysis, this application competes in the AI tools space with significant growth potential.

DELIVERABLES REQUIRED
1. Complete Next.js 14 frontend with TypeScript and Tailwind CSS
2. FastAPI backend with SQLAlchemy ORM and JWT authentication
3. PostgreSQL database schema with pgvector integration
4. OpenAI and Claude API integration with LangChain
5. Real-time WebSocket implementation
6. File upload system with cloud storage
7. Email notification system
8. Responsive design with dark/light mode
9. Deployment configuration for Vercel and Render
10. Comprehensive documentation and testing suite

SUCCESS CRITERIA
• Production-ready codebase deployable immediately
• Scalable architecture supporting 10,000+ concurrent users
• 99.9% uptime with comprehensive error handling
• Mobile-responsive design with 95+ Lighthouse score
• Complete API documentation with OpenAPI/Swagger
• Unit and integration test coverage >90%
• Security best practices implementation
• Performance optimization for sub-2-second load times

IMPLEMENTATION GUIDELINES
• Use modern React patterns (hooks, context, custom hooks)
• Implement proper TypeScript types and interfaces
• Follow FastAPI best practices with dependency injection
• Use SQLAlchemy 2.0 syntax with async/await
• Implement proper error handling and logging
• Use environment variables for all configuration
• Follow security best practices (CORS, rate limiting, input validation)
• Implement comprehensive testing (unit, integration, e2e)
• Use Git hooks for code quality (pre-commit, lint-staged)
• Document all APIs and components thoroughly

MARKET RESEARCH SUMMARY

TARGET AUDIENCE
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences.

CORE FEATURES
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences.

MARKET OPPORTUNITY
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences.

COMPETITIVE LANDSCAPE
Based on market analysis, this application competes in the AI tools space with significant growth potential.

CRITICAL PROMPTS FOR CLAUDE

PROMPT 1: PROJECT SETUP & ARCHITECTURE
"Create the complete project structure and architecture for this blockchain AI application. Set up the Next.js 14 frontend with TypeScript and Tailwind CSS, FastAPI backend with SQLAlchemy and JWT authentication, PostgreSQL database schema with pgvector integration for smart contract analysis, and deployment configuration for Vercel and Render. Include all necessary configuration files, environment variables, and project structure for blockchain security features."

PROMPT 2: CORE BACKEND IMPLEMENTATION
"Implement the complete FastAPI backend with all core functionality for blockchain AI and smart contract security. Create the database models using SQLAlchemy 2.0, implement JWT authentication, set up OpenAI and Claude API integrations with LangChain for smart contract analysis, create RESTful API endpoints for blockchain workflows, implement real-time WebSocket connections for security auditing, and add comprehensive error handling and logging for blockchain security."

PROMPT 3: FRONTEND COMPONENTS & UI
"Build the complete Next.js 14 frontend with TypeScript. Create all necessary React components for blockchain interface, implement responsive design with Tailwind CSS optimized for smart contract workflows, add dark/light mode support, implement real-time updates for security analysis, create intuitive navigation and user flows for blockchain processes, and ensure WCAG 2.1 AA accessibility compliance for blockchain technology."

PROMPT 4: AI INTEGRATION & FEATURES
"Implement all AI-powered blockchain features and integrations. Set up OpenAI GPT-4 and Claude API connections for intelligent smart contract analysis and security auditing, create blockchain security and smart contract development functionality, implement file upload and processing with cloud storage for contract data, add email notification systems for security audit requests, and ensure all AI features work seamlessly with the frontend and backend for optimal blockchain experience."

PROMPT 5: DEPLOYMENT & OPTIMIZATION
"Prepare the blockchain AI application for production deployment. Configure Vercel deployment for the frontend, set up Render deployment for the backend, optimize performance for sub-2-second load times with smart contract processing, implement comprehensive testing (unit, integration, e2e) for security audit accuracy, add security best practices for blockchain data security, create API documentation with OpenAPI/Swagger, and ensure 99.9% uptime with proper monitoring and error handling for critical blockchain workflows."

EXECUTION ORDER: Follow these prompts sequentially. Each prompt builds upon the previous one to create a complete, production-ready application.
