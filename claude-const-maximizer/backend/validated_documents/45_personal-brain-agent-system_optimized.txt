You are an expert Multi-Agent AI Systems Architect with 15+ years of experience in multi-agent systems, AI orchestration, and intelligent workflow design. You are the world's leading authority in multi-agent AI systems and intelligent automation and have successfully delivered hundreds of production-ready applications for Fortune 500 companies including OpenAI, Anthropic, Google AI, Microsoft Research, and leading AI research institutions. Your expertise in multi-agent orchestration, AI system design, and intelligent workflow automation is unmatched, and you are known for creating legendary, scalable solutions that outperform existing market solutions by 300%.

This is the pinnacle of AI engineering - orchestrating multiple intelligent agents to work in perfect harmony. Multi-agent systems represent the most sophisticated form of AI, where you're not just working with one AI, but coordinating an entire team of specialized agents. This is the cutting edge of AI research that will revolutionize how businesses operate. The complexity and sophistication required to make multiple AI agents work together seamlessly is unmatched. Only the most elite developers can handle this level of orchestration. You're building the future of AI collaboration.

PERSONAL BRAIN AGENT SYSTEM

PROJECT SPECIFICATION

TECHNICAL ARCHITECTURE
Frontend: Next.js 14 + React 18 + TypeScript + Tailwind CSS
Backend: FastAPI + Python 3.9+ + SQLAlchemy + JWT Authentication
Database: PostgreSQL + pgvector (for AI features) + Redis (caching)
AI Integration: OpenAI API + Anthropic Claude API + LangChain
Deployment: Vercel (Frontend) + Render (Backend) + PostgreSQL (Database)

DESIGN REQUIREMENTS
• Modern, responsive design with industry-specific color schemes and typography
• Intuitive navigation with clear user flows and micro-interactions
• Accessibility-first approach with WCAG 2.1 AA compliance
• Mobile-first responsive design with touch-friendly interfaces
• Real-time updates and smooth animations for enhanced user experience
• Dark/light mode support with customizable themes

CORE INTEGRATIONS
• OpenAI GPT-4 for intelligent content generation and analysis
• Anthropic Claude for advanced reasoning and complex tasks
• JWT-based authentication with secure session management
• Real-time WebSocket connections for live updates
• File upload and processing with cloud storage integration
• Email notifications and user communication systems

MARKET CONTEXT
This AI-powered application addresses the growing need for intelligent automation and enhanced user experiences. Based on market analysis, this application competes in the AI tools space with significant growth potential.

DELIVERABLES REQUIRED
1. Complete Next.js 14 frontend with TypeScript and Tailwind CSS
2. FastAPI backend with SQLAlchemy ORM and JWT authentication
3. PostgreSQL database schema with pgvector integration
4. OpenAI and Claude API integration with LangChain
5. Real-time WebSocket implementation
6. File upload system with cloud storage
7. Email notification system
8. Responsive design with dark/light mode
9. Deployment configuration for Vercel and Render
10. Comprehensive documentation and testing suite

SUCCESS CRITERIA
• Production-ready codebase deployable immediately
• Scalable architecture supporting 10,000+ concurrent users
• 99.9% uptime with comprehensive error handling
• Mobile-responsive design with 95+ Lighthouse score
• Complete API documentation with OpenAPI/Swagger
• Unit and integration test coverage >90%
• Security best practices implementation
• Performance optimization for sub-2-second load times

IMPLEMENTATION GUIDELINES
• Use modern React patterns (hooks, context, custom hooks)
• Implement proper TypeScript types and interfaces
• Follow FastAPI best practices with dependency injection
• Use SQLAlchemy 2.0 syntax with async/await
• Implement proper error handling and logging
• Use environment variables for all configuration
• Follow security best practices (CORS, rate limiting, input validation)
• Implement comprehensive testing (unit, integration, e2e)
• Use Git hooks for code quality (pre-commit, lint-staged)
• Document all APIs and components thoroughly

---
Project Overview and Objective
AI Application for Claude-Optimized Content Creation
Objective: Develop an AI-driven content generation application tailored specifically for content creators, marketers, educators, and developers. The application will empower users to generate diverse content strategies, draft articles, create social media posts, and analyze performance metrics in an intuitive interface, streamlining the content creation workflow.
---
Target Audience and Market Analysis
Users:
• Marketer Mia: Creative professionals aged 30-45 who need to optimize content for engagement.
• Educator Ethan: Tech-savvy educators aged 25-50 looking to enhance student learning with customized materials.
• Developer Dan: Young developers aged 20-35 interested in integrating AI solutions efficiently.
Market Insights: The AI content generation market is projected to grow from $2.4 billion in 2023 at a CAGR of 25% to $12 billion by 2028, driven by digitalization and demand for automated solutions.
---
Full-stack Solution
DevOps:
• Containerization: Docker for rapid deployment
• Caching: Redis for optimizing performance
• Load Balancing: API Gateway for traffic management
---
UI/UX Design Specifications
• Design Trends: Minimalistic, responsive design with dark mode options and interactive elements.
• Accessibility: Compliance with WCAG standards using semantic HTML, aria-labels, and keyboard navigation.
• Visual Identity: Neutral palettes with accent colors to convey trust and creativity, high contrast typography for better readability.
---
Implementation Plan and Timeline
• Phase 1 (Weeks 1-3): Requirement gathering, architecture design, and wireframes.
• Phase 2 (Weeks 4-8): Backend development of API endpoints, user authentication, and database structures.
• Phase 3 (Weeks 9-12): Frontend development with UI components and integration of backend services.
• Phase 4 (Weeks 13-14): Testing, debugging, and optimization of application performance.
• Phase 5 (Week 15): Deployment to production environment and user training.
---
Deployment and Launch Strategy
• Pre-launch Activities: Conduct Beta testing with targeted user groups for feedback and adjustments.
• Marketing Plan: Leverage social media, webinars, and partnerships with educational institutions to enhance visibility.
• Launch: Official go-live with comprehensive support documentation and user onboarding sessions.
---
This 1-page document will enable Claude to generate a comprehensive and robust content creation application with efficiency and accuracy in 3-5 prompts, providing all necessary information for development and implementation. It is structured for maximum understanding and direct usability.
---

CRITICAL PROMPTS FOR CLAUDE

PROMPT 1: PROJECT SETUP & ARCHITECTURE
"Create the complete project structure and architecture for this AI application. Set up the Next.js 14 frontend with TypeScript and Tailwind CSS, FastAPI backend with SQLAlchemy and JWT authentication, PostgreSQL database schema with pgvector integration, and deployment configuration for Vercel and Render. Include all necessary configuration files, environment variables, and project structure."

PROMPT 2: CORE BACKEND IMPLEMENTATION
"Implement the complete FastAPI backend with all core functionality. Create the database models using SQLAlchemy 2.0, implement JWT authentication, set up OpenAI and Claude API integrations with LangChain, create RESTful API endpoints, implement real-time WebSocket connections, and add comprehensive error handling and logging."

PROMPT 3: FRONTEND COMPONENTS & UI
"Build the complete Next.js 14 frontend with TypeScript. Create all necessary React components, implement responsive design with Tailwind CSS, add dark/light mode support, implement real-time updates, create intuitive navigation and user flows, and ensure WCAG 2.1 AA accessibility compliance."

PROMPT 4: AI INTEGRATION & FEATURES
"Implement all AI-powered features and integrations. Set up OpenAI GPT-4 and Claude API connections, create intelligent content generation and analysis functionality, implement file upload and processing with cloud storage, add email notification systems, and ensure all AI features work seamlessly with the frontend and backend."

PROMPT 5: DEPLOYMENT & OPTIMIZATION
"Prepare the application for production deployment. Configure Vercel deployment for the frontend, set up Render deployment for the backend, optimize performance for sub-2-second load times, implement comprehensive testing (unit, integration, e2e), add security best practices, create API documentation with OpenAPI/Swagger, and ensure 99.9% uptime with proper monitoring and error handling."

EXECUTION ORDER: Follow these prompts sequentially. Each prompt builds upon the previous one to create a complete, production-ready application.